//List.h
#ifndef LIST_H
#define LIST_H
const int maxSize = 100;
class List
{
public:
	List();
	~List();
	int numberOfItem();
	void addItem(int item);
	void deleteItem();
	void printItem();
	int findItem(int x);

private:
	int  size;
	int array[maxSize];
};
#endif
......................................................................................................................
//List.cpp
#include <iostream>
using namespace std;
#include "List.h"

List::List()
{
	size = 0;
}

List::~List()
{  }

int List::numberOfItem()
{
	return size;
}

void List::addItem(int item)
{
	if (size == maxSize)
	{
		cout << "***There is no more place left*****\n";
		return;
	}
	array[size] = item;
	size++;
}


void List::deleteItem()
{
	if (size == 0)
	{
		cout << "***No more item to be deleted*****\n";
		return;
	}
	size--;
}

void List::printItem()
{
	for (int i = 0; i < size; i++)
		cout << array[i] << " ";
	cout << "\n";
}

int List::findItem(int x)
{
	for (int i = 0; i < size; i++)
	{
		if (x == array[i])
		{
			return i;
		}
	}
	return 0;
}
..........................................................................................................................
//ListMain.cpp
#include <iostream>
using namespace std;
#include "List.h"
void main()
{
	int item, x;
	char answer;
	List ItemList;

	cout << "Now there are: " << ItemList.numberOfItem()
		<< " item in the list\n\n";
	cout << "Enter a digit:";
	cin >> item;
	for (int i = 0; i < 10; i++)
	{
		ItemList.addItem(item);
		cout << "Item " << item++ << " is added." << endl;
	}
	cout << "Now there are: " << ItemList.numberOfItem()
		<< " item in the list\n\n";
	cout << "The list are : \n";
	ItemList.printItem();
	cout << "Now one item will be deleted. Press Y:";
	cin >> answer;
	ItemList.deleteItem();
	cout << "The updated list are : \n";
	ItemList.printItem();
	cout << "Enter a digit to be searched: ";
	cin >> x;
	if (ItemList.findItem(x) != 0)
	{
		cout << x << " found at index " << ItemList.findItem(x) << endl;
	}
	else
	{
		cout << "Item could not be found";
	}

}





















